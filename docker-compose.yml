services:

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "50432:${APP_DB_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - dbdata:/var/lib/postgresql/data

  backend:
    image: ${IMAGE_REGISTRY}/backend:${IMAGE_TAG:-latest}
    env_file: .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      APP_DB_HOST: ${APP_DB_HOST}
      APP_DB_PORT: ${APP_DB_PORT}
      APP_DB_NAME: ${APP_DB_NAME}
      APP_DB_USER: ${APP_DB_USER}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "${APP_SERVER_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 20

  frontend:
    image: ${IMAGE_REGISTRY}/frontend:${IMAGE_TAG:-latest}
    ports:
      - "${NGINX_HTTP_PORT:-8080}:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost/ >/dev/null || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 30

volumes:
  dbdata:
